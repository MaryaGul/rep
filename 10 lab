#include <iostream> //2
#include <string>
using namespace std;

class publication
{
private:
	string title;
	float price;
public:
	virtual void vvod()
	{
		cout << "\nВведите название: "; cin >> title;
		cout << "Введите цену: "; cin >> price;
	}
	virtual void vivod()
	{
		cout << "\n\nНазвание: " << title;
		cout << "\nЦена: " << price;
	}
};

class book : public publication
{
private:
	int pages;
public:
	void vvod()
	{
		publication::vvod();
		cout << "Введите количество страниц: "; cin >> pages;
	}
	void vivod()
	{
		publication::vivod();
		cout << "\nСтраницы: " << pages;
	}
};
class tape : public publication
{
private:
	float timee;
public:
	void vvod()
	{
		publication::vvod();
		cout << "Введите время проигрывания: "; cin >> timee;
	}
	void vivod()
	{
		publication::vivod();
		cout << "\nВремя проигрывания: " << timee;
	}
};

int main() 
{
    cout<<"Task 2"<<endl;
	publication* pubarr[100];          
	int n = 0;                         
	char choice;                       

	do {
		cout << "Введите данные для книги или ленты (b/t)? ";
		cin >> choice;
		if (choice == 'b')               
			pubarr[n] = new book;        
		else                            
			pubarr[n] = new tape;       
		pubarr[n++]->vvod();         
		cout << "   Введёте другую (y/n)? ";  
		cin >> choice;
	} while (choice == 'y');              

	for (int j = 0; j < n; j++)             
		pubarr[j]->vivod();           
	cout << endl;
	return 0;
}

#include <iostream>//3
using namespace std;

class Distance                    
{
private:
	int feet;
	float inches;
public:
	Distance()                  
	{
		feet = 0; inches = 0.0;
	}
	Distance(float fltfeet)     
	{                       
		feet = static_cast<int>(fltfeet);
		inches = 12 * (fltfeet - feet);  
	}                        
	Distance(int ft, float in) : feet(ft), inches(in)
	{  }
	void showdist()             
	{
		cout << feet << "\'-" << inches << '\"';
	}
	friend Distance operator * (Distance, Distance); 
};

Distance operator * (Distance d1, Distance d2)
{
	float fltfeet1 = d1.feet + d1.inches / 12;  
	float fltfeet2 = d2.feet + d2.inches / 12;
	float multfeet = fltfeet1 * fltfeet2;     
	return Distance(multfeet);     
}

int main() 
{
    cout<<"Task 3"<<endl;
	Distance dist1(3, 6.0);        
	Distance dist2(2, 3.1);
	Distance dist3;

	dist3 = dist1 * dist2;         

	dist3 = 10.0 * dist3;          
	cout << "dist1 = "; dist1.showdist();
	cout << "\ndist2 = "; dist2.showdist();
	cout << "\ndist3 = "; dist3.showdist();
	cout << endl;
}
#include <iostream> //4
using namespace std;

class Array                    
{
private:
	int* ptr;                 
	int size;                 
public:
	Array(int s)              
	{
		size = s;             
		ptr = new int[s];      
	}
	Array(const Array &arr)
	{
		size = arr.size;
		ptr = new int[size];
		for (int i = 0; i < size; i++)
			*(ptr + i) = *(arr.ptr + i);
	}
	~Array()                 
	{
		delete[] ptr;
	}
	int& operator [] (int j)  
	{
		return *(ptr + j);
	}
	Array& operator = (const Array &arr)
	{
		*this = Array(arr);
		return *this;
	}
};
int main() 
{
    cout<<"Task 4"<<endl;
	const int ASIZE = 10;
	Array arr1(ASIZE);
	for (int j = 0; j < ASIZE; j++)
		arr1[j] = j * j;
	Array arr2(arr1);
	arr2[0] = 1;	
	Array arr3 = arr1;
	arr3[0] = 2;	
	for (int j = 0; j < ASIZE; j++)
		cout << arr1[j] << ' ';
	cout << endl;	
	for (int j = 0; j < ASIZE; j++)
		cout << arr2[j] << ' ';
	cout << endl;
	for (int j = 0; j < ASIZE; j++)
		cout << arr3[j] << ' ';
	cout << endl;
}
#include <iostream> //5
#include <string>
using namespace std;

class publication
{
private:
	string title;
	float price;
public:
	virtual void vvod()
	{
		cout << "\nВведите название: "; cin >> title;
		cout << "Введите цену: "; cin >> price;
	}
	virtual void vivod()
	{
		cout << "\n\nНазвание: " << title;
		cout << "\nЦена: " << price;
	}
	virtual bool isOveersize()
	{
		return false;
	}
};
class book : public publication
{
private:
	int pages;
public:
	void vvod()
	{
		publication::vvod();
		cout << "Введите кол-во страниц: "; cin >> pages;
	}
	void vivod()
	{
		publication::vivod(); cout << "\nСтраницы: " << pages;
	}
	bool isOveersize()
	{
		return pages > 800;
	}
};
class tape : public publication
{
private:
	float timee;
public:
	void vvod()
	{
		publication::vvod();
		cout << "Введите время проигрывания: "; cin >> timee;
	}
	void vivod()
	{
		publication::vivod(); cout << "\nВремя проигрывания: " << timee;
	}
	bool isOveersize()
	{
		return timee > 90;
	}
};
int main() 
{
    cout<<"Task 5"<<endl;
	publication* pubarr[100];          
	int n = 0;                         
	char choice;                       
	do {
		cout << "\nВведите тип(книга или лента) (b/t)? "; cin >> choice;
		if (choice == 'b') pubarr[n] = new book;
		else  pubarr[n] = new tape;       
		do {
			pubarr[n]->vvod();
			if (pubarr[n]->isOveersize())
				cout << "Переполненно!\n";
			else break;
		} while (true);
		n++;
		cout << "   Введите еще другую (y/n)? ";  
		cin >> choice;
	} while (choice == 'y');              

	for (int j = 0; j < n; j++)            
		pubarr[j]->vivod();          
	cout << endl;
	return 0;
}
#include <iostream> //6
#include <string>
#include <sstream>
using namespace std;

class money
{
private:
	long double _sum;
public:
	money() {}
	explicit money(long double sum) : _sum(sum) {}
	long double mstold(string sum)
	{
		string res = "";
		for (int i = 0; i < sum.length(); i++)
		{
			if (isdigit(sum[i]) || sum[i] == ',')
				res += sum[i];
		}
		return stold(res.c_str());
	}
string ldtoms(long double sum)
	{
		if (sum > 9999999999999990.00) return "";
		ostringstream strs;
		strs << fixed << sum;
		string ustr = strs.str();
		string newstr = "$";
		int i, j;
		for (i = 0; i < ustr.length() && (ustr[i] == '0' || ustr[i] == '.'); i++);
		if (i > 1 && ustr[i - 1] == '.') i -= 2;
		if (i == ustr.length()) return "$0,00";
		for (j = ustr.length() - 1; j >= 0 && ustr[j] != '.'; j--);
		j += 2;
		for (; i <= j; i++)
		{
			if (i != 0 && i < j - 2 && (j - i + 1) % 3 == 0) newstr += '.';
			newstr += ustr[i] == '.' ? ',' : ustr[i];
		}
		return newstr;
	}
	void vvodmoney()
	{
		string str;
		cout << "Введите сумму в долларах:\n"; cin >> str;
		_sum = mstold(str);
	}
	void vivodmoney()
	{
		cout << "Сумма денег: " << ldtoms(_sum) << endl;
	}
	money operator+(money m)
	{
		return money(_sum + m._sum);
	}
	money operator-(money m)
	{
		return money(_sum - m._sum);
	}
	money operator*(long double ld)
	{
		return money(_sum * ld);
	}
	long double operator/(money m)
	{
		return _sum / m._sum;
	}
	money operator/(long double ld)
	{
		return money(_sum / ld);
	}
	friend money operator * (long double ld, money m);
	friend money operator / (long double ld, money m);
};
money operator * (long double ld, money m)
{
	return money(m._sum * ld);
}
money operator / (long double ld, money m)
{
	return money(ld / m._sum);
}
int main() 
{
	cout<<"Task 6"<<endl;
	money m1, m2;
	long double s;
	char ch;
	do
	{
		m1.vvodmoney();
		m2.vvodmoney();
		cout << "Введите double: "; cin >> s;
		cout << "m1 + m2: ";
		(m1 + m2).vivodmoney();
		cout << "m1 - m2: ";
		(m1 - m2).vivodmoney();
		cout << "m1 * s: ";
		(m1 * s).vivodmoney();
		cout << "m1 / m2: ";
		cout << (m1 / m2) << endl;
		cout << "m1 / s: ";
		(m1 / s).vivodmoney();
		cout << "s * m1: ";
		(s * m1).vivodmoney();
		cout << "s / m1: ";
		(s / m1).vivodmoney();
		cout << "Повторить (y/n)? ";
		cin >> ch;
	} while (ch != 'n');
	return 0;
}

#include <iostream>//7
#include <string>
#include <sstream>
#include <cmath>
using namespace std;
class money
{
private:
	long double _sum;
public:
	money() {}
	explicit money(long double sum) : _sum(sum) {}
	long double mstold(string sum)
	{
		string res = "";
		for (int i = 0; i < sum.length(); i++)
		{
			if (isdigit(sum[i]) || sum[i] == ',')
				res += sum[i];
		}
		return stold(res.c_str());
	}
	string ldtoms(long double sum)
	{
		if (sum > 9999999999999990.00) return "";
		ostringstream strs;
		strs << fixed << sum;
		string ustr = strs.str();
		string newstr = "$";
		int i, j;
		for (i = 0; i < ustr.length() && (ustr[i] == '0' || ustr[i] == '.'); i++);
		if (i > 1 && ustr[i - 1] == '.') i -= 2;
		if (i == ustr.length()) return "$0,00";
		for (j = ustr.length() - 1; j >= 0 && ustr[j] != '.'; j--);
		j += 2;

		for (; i <= j; i++)
		{
			if (i != 0 && i < j - 2 && (j - i + 1) % 3 == 0)
				newstr += '.';
			newstr += ustr[i] == '.' ? ',' : ustr[i];
		}
		return newstr;
	}

	void vvodmoney()
	{
		string str;
		cout << "Введите сумму в долларах:\n";
		cin >> str;
		_sum = mstold(str);
	}
	void vivodmoney()
	{
		cout << "Сумма денег: " << ldtoms(_sum) << endl;
	}
	friend money round(money m);
};
money round(money m)
{
	long double temp = m._sum;
	return money(modfl(m._sum, &temp) >= 0.5 ? temp + 1 : temp);
}
int main() 
{
	cout<<"Task 7"<<endl;
	money m;
	char ch;
	do
	{
		m.vvodmoney();
		round(m).vivodmoney();
		cout << "Повторить (y/n)? ";
		cin >> ch;
	} while (ch != 'n');
	return 0;
}



#include<iostream>//4
#include <string>
using namespace std;

class publication
{
private:
 string name;
 float price;
public:
 void vvod()
 {
  cout<<"Введите название книги: ";
  cin>>name;
  cout<<"Введите цену книги: ";
  cin>>price;
 }
 void vivod()
 {
  cout<<"Название книги: "<<name <<endl;
  cout<<"Цена книги: "<<price<<endl;
 }
};

const int month = 3;

class sales
{
private:
 float sales [month];
public:
 void vvod()
 {
  for (int j = 1; j <= month; j++)
  {
  cout << "Введите продажи книг за  " << j << " месяца: ";
  cin >> sales[j];
  }
 }
 void vivod()
 {
  for (int j = 1; j <= month; j++)
  {
  cout << "Продажи за " << j << " месяца: ";
  cout << sales[j]<<endl;
  }
 }
};

class disk : private sales, private publication
{
private:
 enum etype {CD, DVD};
public:
 void vvod()
 {
  etype diskt;
  char type;
  publication::vvod();
  cout << "Какой тип диска? (c/d): ";
  cin >> type;
  if (type = 'c')
   diskt = CD;
  else diskt = DVD;

  sales::vvod();
 }
 void vivod()
 {
  publication::vivod();
  etype diskt;
  char type;
  cout << "Тип диска: ";
  if (diskt = CD)
   cout << "CD"<<endl;
  else
   cout << "DVD"<<endl;
  sales::vivod();
 }
};

int main()
{
    cout<<"Task 4"<<endl;
	disk b;
	b.vvod();
	cout << endl;
	b.vivod();
	cout << endl;
	return 0;
}

#include <iostream>//5
using namespace std;

const int LEN = 80;

class employee
{
private:
	char name[LEN];
	unsigned long number;
public:
	void vvod()
	{
		cout << "Введите фамилию сотрудника: "; cin >> name;
		cout << "Введите номер сотрудника: ";      cin >> number;
	}
	void vivod() 
	{
		cout << "Фамилия сотрудника: " << name<<endl;
		cout << "Его номер: " << number<<endl;
	}
};

class employee2 : private employee
{
private:
	double compensation;
	enum payperiod { Hourly, Weekly, Monthly } period;
public:
void vvod()
	{
		employee::vvod();
		cout << "Введите оплату: ";
		cin >> compensation;
		char let;
		cout << "Введите период оплаты работы сотрудника(h/w/m): "; 
		cin >> let;
		switch (let)
		{
		case 'h': period = Hourly; break;
		case 'w': period = Weekly; break;
		case 'm': period = Monthly; break;
		default: cout << "Такой оплаты нет!"; break;
		}

	}
	void vivod()
	{
		employee::vivod();
		cout << "Оплата: "; cout << compensation<<endl;
		cout << "Период оплаты: ";
		switch (period)
		{
		case Hourly: cout << "Почасовая"; break;
		case Weekly: cout << "Понедельная"; break;
		case Monthly: cout << "Помесячная"; break;
		default: cout << "Такой оплаты нет!"; break;
		}
	}

};

int main()
{
    cout<<"Task 5"<<endl;
	employee2 emp;
	emp.vvod();
	cout<<endl;
	emp.vivod();
	cout << endl;
	return 0;
}
